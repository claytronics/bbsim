type route neighbor(node, node, int).
type level(node, max int).
type route bottomNeighbor(node, node).
type noBottomNeighbor(node).
type route topNeighbor(node, node).
type route sideNeighbor(node, node).
type vacant(node, int).

const RED = 0.
const ORANGE = 1.
const YELLOW = 2.
const GREEN = 3.
const AQUA = 4.
const BLUE = 5.
const WHITE = 6.
const PURPLE = 7.
const PINK = 8.
const NUM_COLORS = 9.

!neighbor(N, X, 5), !neighbor(X, N, _) -o !bottomNeighbor(N, X).
!vacant(N, 5) -o !noBottomNeighbor(N).
!neighbor(N, X, 0), !neighbor(X, N, _) -o !topNeighbor(N, X).
!neighbor(N, X, P), !neighbor(X, N, _), P <> 0, P <> 5  -o !sideNeighbor(N, X).

!noBottomNeighbor(N) -o !level(N, 0).
!sideNeighbor(N, X), !level(X, H) -o !level(N, H).
!bottomNeighbor(N, X), !level(X, BH) -o !level(N, BH + 1).
!topNeighbor(N, X), !level(X, TH) -o !level(N, TH - 1).

!level(N, Color) -o !setColor2(N, Color % num_colors).

